apiVersion: v1
kind: Namespace
metadata:
  name: argocd-applications
  annotations:
    argocd.argoproj.io/sync-wave: '-1'
  labels:
    kubernetes.io/metadata.name: argocd-applications
    argocd.argoproj.io/managed-by: openshift-gitops

---

apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: argocd-applications
  namespace: argocd-applications
  annotations:
    argocd.argoproj.io/sync-wave: '1'
spec:
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  notifications:
    enabled: false
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ""
  sso:
    dex:
      openShiftOAuth: true
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
    provider: dex
  tls:
    ca: {}
    initialCerts: {}
    #   server.example.com: -----BEGIN CERTIFICATE----- ...
  initialSSHKnownHosts:
    excludedefaulthosts: true
    keys: ''
  kustomizeBuildOptions: ''
  repo:
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  rbac:
    defaultPolicy: role:readonly
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
    scopes: "[groups]"

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-applications-argocd-application-controller
  annotations:
    argocd.argoproj.io/sync-wave: '2'
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-gitops-openshift-gitops-argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-applications-argocd-application-controller
  namespace: argocd-applications

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openshift-gitops-openshift-gitops-argocd-server
  annotations:
    argocd.argoproj.io/sync-wave: '2'
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-gitops-openshift-gitops-argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-applications-argocd-server
  namespace: argocd-applications
