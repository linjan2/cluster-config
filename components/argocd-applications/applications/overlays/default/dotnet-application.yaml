apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: dotnet-application
  namespace: argocd-applications
  annotations:
    argocd.argoproj.io/sync-wave: '0'
spec:
  # must whitelist creation of namespace
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - namespace: dotnet-application
    server: https://kubernetes.default.svc
  sourceRepos:
  - ssh://git@gitserver.tools.svc:2022/home/git/repos/dotnet-application-deployment.git

---

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: dotnet-application
  namespace: argocd-applications
  annotations:
    argocd.argoproj.io/sync-wave: '0'
spec:
  destination:
    namespace: dotnet-application
    server: https://kubernetes.default.svc
  project: dotnet-application
  source:
    path: overlays/a
    repoURL: ssh://git@gitserver.tools.svc:2022/home/git/repos/dotnet-application-deployment.git
    targetRevision: main
  syncPolicy:
    automated:
      allowEmpty: true
      #prune: true
      #selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground

---

apiVersion: v1
kind: Namespace
metadata:
  name: dotnet-application
  annotations:
    openshift.io/description: ".NET application"
    openshift.io/display-name: "dotnet-application"
    argocd.argoproj.io/sync-wave: '1'
  labels:
    kubernetes.io/metadata.name: dotnet-application
    argocd.argoproj.io/managed-by: argocd-applications

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin
  namespace: dotnet-application
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: argocd-applications-argocd-application-controller
  namespace: argocd-applications
- kind: ServiceAccount
  name: argocd-applications-argocd-server
  namespace: argocd-applications
